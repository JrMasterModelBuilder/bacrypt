#!/usr/bin/env python3

import argparse
import sys

VERSION = '1.0.0'

def xor(data: bytearray, key: bytearray):
	m = len(key)
	for i in range(len(data)):
		data[i] ^= key[i % m]

class Main(object):
	PAGE = 2000
	PEPPER = bytearray(bytes.fromhex(
		'8C94849890A18B8C8EA5836D94978193899B8085A1'
	))

	def __init__(self, options: argparse.Namespace):
		self.raw = options.raw
		self.password = options.password[0]
		self.file = options.file[0]

	def main(self) -> int:
		page = self.PAGE
		if self.raw:
			key = bytearray(bytes.fromhex(self.password))
		else:
			key = bytearray(self.password.encode('ascii'))
			xor(key, self.PEPPER)
		with open(self.file, 'rb+') as f:
			while True:
				data = bytearray(f.read(page))
				size = len(data)
				if size == 0:
					break
				xor(data, key)
				f.seek(-size, 1)
				f.write(data)
		return 0

def main():
	parser = argparse.ArgumentParser()
	parser.add_argument(
		'-v',
		'--version',
		action='version',
		version=VERSION
	)
	parser.add_argument(
		'-r',
		'--raw',
		action='store_true',
		help='raw xor key as hex password'
	)
	parser.add_argument(
		'password',
		nargs=1,
		help='password'
	)
	parser.add_argument(
		'file',
		nargs=1,
		help='file'
	)
	return Main(parser.parse_args()).main()

if __name__ == '__main__':
	sys.exit(main())
